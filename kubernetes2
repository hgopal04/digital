apiVersion: v1
kind: Pod
metadata:
  name: fresco-nginx-pod
spec:
  volumes: 
     - name: task-pv-storage
       persistentVolumeClaim: 
            claimName: fresco-pvc
     - name: fresco-secret
       secret: 
          secretName: fresco-secret 
  containers:
    - name: fresco-nginx-container
      image: nginx
      volumeMounts:
        - name: fresco-secret
          mountPath: "/etc/test"
          readOnly: true
        - name: task-pv-storage
          mountPath: "usr/share/nginx/html"
      env:
        - name: SERVER_URL_ENV
          valueFrom:
            configMapKeyRef:
              name: fresco-config
              key: SERVER_URL 



1. kubectl create configmap fresco-config --from-literal SERVER_URL=https://www.fresco.me

open folder /home/labuser and create a file named: fresco-nginx-pod.yaml and type:


2.  Nginx Pod
apiVersion: v1
kind: Pod
metadata:
  name: fresco-nginx-pod
spec:
  containers:
    - name: fresco-nginx-container
      image: nginx
      env:
        - name: SERVER_URL_ENV
          valueFrom:
            configMapKeyRef:
              name: fresco-config
              key: SERVER_URL

3. kubectl create secret generic test --from-literal=admin=YWRtaW4K  --from-literal=pass=cGFzcwo= 
kubectl create secret generic fresco-secret --from-literal user=admin --from-literal pass=pass
now goto the nginx pod yaml file and add

4. add secret to pod
apiVersion: v1
kind: Pod
metadata:
  name: fresco-nginx-pod
spec:
  containers:
    - name: fresco-nginx-container
      image: nginx
      volumeMounts:
        - name: fresco-secret
          mountPath: "/etc/test"
          readOnly: true
      env:
        - name: SERVER_URL_ENV
          valueFrom:
            configMapKeyRef:
              name: fresco-config
              key: SERVER_URL
  volumes: 
     - name: fresco-secret
       secret: 
          secretName: fresco-secret   
          
          
kubectl delete pods --all
kubectl apply -f fresco-nginx-pod.yaml

5. Persistent Volume

apiVersion: v1
kind: PersistentVolume
metadata:
  name: fresco-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/fresco"  


6. Persistent Volume claim

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: fresco-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi    
   
7. Edit pod file

apiVersion: v1
 kind: Pod
metadata:
 name: fresco-nginx-pod
spec:
  containers:
    - name: fresco-nginx-container
      image: nginx
      env:
       - name: SERVER_URL_ENV
         valueFrom:
           configMapKeyRef:
             name: fresco-config
             key: SERVER_URL
    volumeMounts:
      - name: fresco-secret
        mountPath: "/etc/test"
      - name: fresco-pvc
        mountPath: "/usr/share/nginx/html"
  volumes:
   - name: fresco-secret
     secret:
       secretName: fresco-secret
   - name: fresco-pvc
       persistentVolumeClaim:
         claimName: fresco-pvc



8.  RBAC
minikube start --extra-config=apiserver.Authorization.Mode=RBAC
openssl genrsa -out emp.key 2048
openssl req -new -key emp.key -out emp.csr -subj "/CN=emp/O=dev"
openssl x509 -req -in emp.csr -CA ~/.minikube/./ca.crt -CAkey ~/.minikube/./ca.key -CAcreateserial -out emp.crt -days 500
kubectl create namespace dev
kubectl config set-context dev-ctx --cluster=minikube --namespace=dev --user=emp
kubectl config set-credentials emp --client-certificate=./emp.crt  --client-key=./emp.key
kubectl --context=dev-ctx get pods

kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: dev
  name: emp-role
rules:
- apiGroups: ["", "extensions", "apps"]
  resources: ["deployments",  "pods"]
  verbs: ["get", "list"]


kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: emp-bind
  namespace: dev
subjects:
- kind: User
  name: emp
  apiGroup: ""
roleRef:
  kind: Role
  name: emp-role
  apiGroup: ""

kubectl --context=dev-ctx get pods
kubectl --context=dev-ctx run --image=nginx --ns=dev
